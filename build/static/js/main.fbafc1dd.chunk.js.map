{"version":3,"sources":["components/filter-form.js","components/notification.js","components/person-form.js","components/person.js","services/persons.js","app.js","index.js"],"names":["FilterForm","value","onChange","Notification","message","className","PersonForm","name","number","onNameChanged","onNumberChanged","onAdded","onSubmit","type","Person","person","onDelete","onClick","baseUrl","axios","get","then","response","data","newObject","post","objectId","delete","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","notification","setNotification","useEffect","personService","initialPersons","showNotification","style","setTimeout","event","target","preventDefault","currentPerson","find","alert","newPerson","window","confirm","id","catch","error","concat","toLowerCase","includes","map","key","p","removePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbafc1dd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst FilterForm = ({value, onChange}) => {\r\n  return (\r\n    <div>\r\n      <form>\r\n        <div>\r\n          filter shown with <input value={value} onChange={onChange} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FilterForm\r\n","import React from 'react'\r\n\r\nconst Notification = ({message, className}) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={className}>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nconst PersonForm = ({name, number, onNameChanged, onNumberChanged, onAdded}) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={onAdded}>\r\n        <div>\r\n          name: <input value={name} onChange={onNameChanged} />\r\n        </div>\r\n        <div>\r\n          number: <input value={number} onChange={onNumberChanged} />\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\nconst Person = ({person, onDelete}) => {\r\n  return (\r\n    <div>\r\n      {person.name} {person.number} <button onClick={onDelete}>delete</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Person\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = objectId => {\r\n  const request = axios.delete(`${baseUrl}/${objectId}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (objectId, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${objectId}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }\r\n","import React, { useState, useEffect } from 'react'\r\nimport FilterForm from './components/filter-form'\r\nimport Notification from './components/notification'\r\nimport PersonForm from './components/person-form'\r\nimport Person from './components/person'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filter, setFilter] = useState('')\r\n  const [notification, setNotification] = useState({message: null, className: 'success'})\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => setPersons(initialPersons))\r\n  }, [])\r\n\r\n  const nameChanged = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const numberChanged = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const filterChanged = (event) => {\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  const addPerson = (event) => {\r\n    event.preventDefault()\r\n\r\n    let currentPerson = persons.find(person => person.name === newName)\r\n\r\n    if (currentPerson && currentPerson.number === newNumber) {\r\n      alert(`${newName} is already added to the phonebook`)\r\n      return\r\n    }\r\n\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    if (currentPerson) {\r\n      if (window.confirm(`${newName} is already added to the phonebook, replace old number with a new one?`)) {\r\n        personService\r\n          .update(currentPerson.id, newPerson)\r\n          .then(person => {\r\n            showNotification(`Updated ${newName}`, 'success')\r\n            currentPerson.number = newNumber\r\n            setNewName('')\r\n            setNewNumber('')\r\n          })\r\n          .catch(error => {\r\n            showNotification(`Information of ${newName} has already been removed from server`, 'error')\r\n            setPersons(persons.filter(person => person.id !== currentPerson.id))\r\n          })\r\n      }\r\n    } else {\r\n      personService\r\n        .create(newPerson)\r\n        .then(person => {\r\n          showNotification(`Added ${newName}`, 'success')\r\n          setPersons(persons.concat(person))\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n    }\r\n  }\r\n\r\n  const removePerson = (person) => {\r\n    if (window.confirm(`Delete ${person.name}?`)) {\r\n      personService\r\n        .remove(person.id)\r\n        .then(data => {\r\n          setPersons(persons.filter(p => p.id !== person.id))\r\n        })\r\n    }\r\n  }\r\n\r\n  const personsToShow = () => persons\r\n    .filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\r\n\r\n  const phonebookEntries = () => personsToShow().map(person =>\r\n    <Person key={person.id}\r\n            person={person}\r\n            onDelete={() => removePerson(person)} />)\r\n\r\n  const showNotification = (message, style) => {\r\n    setNotification({message: message, className: style})\r\n    setTimeout(() => {\r\n      setNotification({message: null})\r\n    }, 5000)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notification.message} className={notification.className} />\r\n      <FilterForm value={filter} onChange={filterChanged} />\r\n      <h2>add a new</h2>\r\n      <PersonForm name={newName}\r\n                  number={newNumber}\r\n                  onNameChanged={nameChanged}\r\n                  onNumberChanged={numberChanged}\r\n                  onAdded={addPerson} />\r\n      <h2>Numbers</h2>\r\n      {phonebookEntries()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}